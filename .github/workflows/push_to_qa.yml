  name: Push the Docker image to AWS ECR Repo
  on:
    push:
      branches:
        - main
  jobs:
    Build:
      name: Build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Get commit hash
          id: get-commit-hash
          run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
        - name: Get timestamp
          id: get-timestamp
          run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

  
        - name: Deploy ECR image to EC2 QA
          env:
            PRIVATE_KEY: ${{ secrets.EC2_QA_PRIVATE_KEY }}
            HOST: ${{ secrets.EC2_QA_HOST }}
            USER: ${{ secrets.EC2_QA_USER }}
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
            IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
          run: |
             echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem
             ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '        
             docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG   
             docker stop $(docker ps -a -q) || true
             docker run -d -p 80:80 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                                                                            '
